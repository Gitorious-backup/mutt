#!/usr/bin/env ruby
raise "You need to run this with JRuby" unless defined?(JRUBY_VERSION)

# encoding: utf-8
#--
#   Copyright (C) 2011 Gitorious AS
#
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU Affero General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU Affero General Public License for more details.
#
#   You should have received a copy of the GNU Affero General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.
#++

require "trollop"
require "mutt"
require "mutt/cli"

opts = Trollop::options(ARGV) do
  version "#{Mutt::VERSION} (c) 2011 Gitorious AS. Licensed under the AGPL."
  banner <<-EOS
Git over HTTP for Gitorious

Usage:
       muttd [options] command

Commands:
       #{Mutt::Cli::COMMANDS.join(', ')}

Options:
EOS

  opt :root, "Where is Gitorious installed on your system?", :type => :string, :required => true
  opt :environment, "What RAILS_ENV to use", :default => "production"
  opt :port, "Which port to listen to", :default => 8081
  opt :allow_push, "Allow push access", :default => true
  stop_on Mutt::Cli::COMMANDS
end

begin
  cli = Mutt::Cli.new(opts)
  command = ARGV.shift

  if command.nil?
    puts "Please specify a supported action: #{Mutt::Cli::COMMANDS.join(', ')}"
    abort "Try --help for help."
  end

  if !cli.respond_to?(command.to_sym)
    puts "Unsupported action #{command}, please specify one of #{Mutt::Cli::COMMANDS.join(', ')}"
    abort "Try --help for help."
  end

  cli.send(command.to_sym)
rescue Mutt::ConfigurationFileNotFound => err
  $stderr.puts "Aborting: #{err.message}"
rescue NativeException => err
  if err.message =~ /^java\.net\.BindException/
    abort "Address 0.0.0.0:#{opts[:port]} is already in use"
  else
    raise err
  end
end
